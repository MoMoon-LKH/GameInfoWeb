buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'org.springframework.boot' version '2.7.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	id 'java'
}

group = 'com.project'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	asciidoctorExtensions
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	snippetsDir = file("build/generated-snippets")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation:2.7.0'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'mysql:mysql-connector-java'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.3'

}

asciidoctor.doFirst{
	delete file('src/main/resources/static/docs')
}

test {
	outputs.dir snippetsDir
}

asciidoctor {
	configurations 'asciidoctorExtensions'
	dependsOn test
	attributes 'snippets': snippetsDir
	inputs.dir snippetsDir
	baseDirFollowsSourceFile()
}

bootJar {
	dependsOn asciidoctor
	from("${asciidoctor.outputDir}/html5") {
		into 'static/docs'
	}
}

task copyDocument(type: Copy) {
	dependsOn asciidoctor

	from file("build/docs/asciidoc")
	into file("src/main/resources/static/docs")
}

build {
	dependsOn copyDocument
}




def querydslDir = "$buildDir/generated/querydsl"

querydsl { // jpa 사용여부와 사용할 경로 지정
	jpa = true
	querydslSourcesDir = querydslDir
}


sourceSets { // build 시 사용할 sourceSet을 추가
	main.java.srcDir querydslDir
}

configurations { // querydsl이 compileClassPath을 상속
	querydsl.extendsFrom compileClasspath
}

compileQuerydsl { // 컴파일 속성
	options.annotationProcessorPath = configurations.querydsl
}

jar{
	enabled = false
}